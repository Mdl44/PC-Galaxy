<!DOCTYPE html>
<html lang="ro">

<head>
  <meta name="keywords"
    content="galerie componente pc, imagini hardware, galerie pc galaxy, componente calculator, gaming pc, periferice">
  <meta name="description"
    content="Explorează galeria noastră de componente PC premium. Descoperă imagini de înaltă calitate cu procesoare, plăci video, tastaturi și alte produse din portofoliul PC Galaxy.">
  <%- include("../fragmente/head.ejs") %>
  <link rel="stylesheet" href="/resurse/css/galerie.css">
  <title></title>
</head>

<body>

  <div class="galerie-background"></div>

  <%- include("../fragmente/header.ejs") %>

  <main>
    <%- include("../fragmente/galerie-statica.ejs") %>

    <div class="container-galerie-animata">
      <section class="galerie-animata">
        <div class="imagini-container">
          <% for (let i = 0; i < locals.numarImaginiAnimate; i++) { 
                let imag = locals.imaginiAnimate[i];
              %>
          <img class="imagine" src="<%= imag.fisier %>"
            alt="<%= imag.continut_alternativ || 'Imagine ' + imag.descriere %>" 
            title="<%= imag.descriere %>"
            data-descriere="<%= imag.descriere %>">
          <% } %>
        </div>
        
        <div class="caption-container">
          <p id="imagine-descriere"></p>
        </div>
      </section>
    </div>

    <div class="efect-css-duotone" style="background-image: url('resurse/imagini/setup-gaming.jpg');"
      aria-label="Imagine cu efect duotone"></div>
  </main>

  <%- include("../fragmente/footer.ejs") %>

  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const images = document.querySelectorAll('.galerie-animata .imagine');
    const descriereElement = document.getElementById('imagine-descriere');
    const imaginiContainer = document.querySelector('.imagini-container');
    let currentIndex = 0;
    const totalImages = images.length;
    const duration = 5000;
    
    let timeRemaining = duration;
    let lastTimestamp = 0;
    let animationId = null;
    let isPaused = false;
    
    updateDescription();
    
    requestAnimationFrame(animate);
    imaginiContainer.addEventListener('mouseenter', function() {
      isPaused = true;
    });
    
    imaginiContainer.addEventListener('mouseleave', function() {
      isPaused = false;
      lastTimestamp = performance.now();
    });
    
    function animate(timestamp) {
      if (!lastTimestamp) lastTimestamp = timestamp;
      if (!isPaused) {
        const elapsed = timestamp - lastTimestamp;
        timeRemaining -= elapsed;
        
        if (timeRemaining <= 0) {
          currentIndex = (currentIndex + 1) % totalImages;
          updateDescription();
          timeRemaining = duration;
        }
      }
      lastTimestamp = timestamp;
      animationId = requestAnimationFrame(animate);
    }
    
    function updateDescription() {
      descriereElement.textContent = images[currentIndex].dataset.descriere || '';
    }
  });
</script>

</body>

</html>